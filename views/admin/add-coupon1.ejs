<!-- views/admin/add-coupon.ejs
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Coupon</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        .error {
            color: red;
            font-size: 0.9em;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">Add Coupon</h1>

        <form id="couponForm" action="/admin/add-coupon" method="POST" onsubmit="return validateCoupon(event)">
            
            <div class="mb-3">
                <label for="code" class="form-label">Coupon Code:</label>
                <input type="text" name="code" id="code" class="form-control" required>
                <span class="error" id="codeError"></span>
            </div>

            
            <div class="mb-3">
                <label for="discountType" class="form-label">Discount Type:</label>
                <select name="discountType" id="discountType" class="form-select" required>
                    <option value="percentage">Percentage (%)</option>
                    <option value="flat">Flat Amount (₹)</option>
                </select>
            </div>

            >
            <div class="mb-3">
                <label for="discount" class="form-label">Discount Value:</label>
                <input type="number" name="discount" id="discount" class="form-control" required min="1">
                <span class="error" id="discountError"></span>
            </div>

            
            <div class="mb-3">
                <label for="expiry" class="form-label">Expiry Date:</label>
                <input type="date" name="expiry" id="expiry" class="form-control" required>
                <span class="error" id="expiryError"></span>
            </div>

            
            <div class="mb-3">
                <label for="usageLimit" class="form-label">Usage Limit:</label>
                <input type="number" name="usageLimit" id="usageLimit" class="form-control" required min="1">
                <span class="error" id="usageLimitError"></span>
            </div>

            
            <div class="mb-3">
                <label for="minOrderValue" class="form-label">Minimum Order Value (Optional):</label>
                <input type="number" name="minOrderValue" id="minOrderValue" class="form-control" min="1">
                <span class="error" id="minOrderValueError"></span>
            </div>

            
            <div class="mb-3">
                <label for="categoryIds" class="form-label">Applicable to Categories:</label>
                <select name="categoryIds[]" id="categoryIds" class="form-select" multiple>
                    <% categories.forEach(category => { %>
                        <option value="<%= category._id %>"><%= category.name %></option>
                    <% }); %>
                </select>
            </div>

            
            <div class="mb-3">
                <label for="productIds" class="form-label">Applicable to Products (Optional):</label>
                <select name="productIds[]" id="productIds" class="form-select" multiple>
                    <% products.forEach(product => { %>
                        <option value="<%= product._id %>"><%= product.productName %></option>
                    <% }); %>
                </select>
            </div>

            
            <div class="mb-3">
                <label for="userRestriction" class="form-label">User Restriction (Optional):</label>
                <select name="userRestriction" id="userRestriction" class="form-select">
                    <option value="">No Restriction</option>
                    <option value="newUser">New User Only</option>
                    <option value="existingUser">Existing User Only</option>
                </select>
            </div>

            
            <button type="submit" class="btn btn-primary">Create Coupon</button>
        </form>

        
        <a href="/admin/coupon" class="btn btn-secondary mt-3">Back to Coupons</a>
    </div>

    <script>
        async function validateCoupon(event) {
            event.preventDefault(); // Prevent default form submission

            // Get form values
            const code = document.getElementById("code").value.trim();
            const discount = parseFloat(document.getElementById("discount").value);
            const expiry = document.getElementById("expiry").value;
            const usageLimit = parseInt(document.getElementById("usageLimit").value);
            const discountType = document.getElementById("discountType").value;
            const minOrderValue = document.getElementById("minOrderValue").value ? parseFloat(document.getElementById("minOrderValue").value) : 0;
            const categoryIds = Array.from(document.getElementById("categoryIds").selectedOptions).map(option => option.value);
            const productIds = Array.from(document.getElementById("productIds").selectedOptions).map(option => option.value);
            const userRestriction = document.getElementById("userRestriction").value;

            const today = new Date().toISOString().split('T')[0];

            // Reset previous error messages
            document.getElementById("codeError").innerText = "";
            document.getElementById("discountError").innerText = "";
            document.getElementById("expiryError").innerText = "";
            document.getElementById("usageLimitError").innerText = "";
            document.getElementById("minOrderValueError").innerText = "";

            let isValid = true;

            // ✅ Validate Fields
            // Validate coupon code
            const codeRegex = /^[A-Z0-9]{3,}$/;
            if (!codeRegex.test(code)) {
                document.getElementById("codeError").innerText = "Coupon code must be at least 3 characters long and contain only uppercase letters and numbers!";
                isValid = false;
            }

            // Validate discount value
            if (discount <= 0) {
                document.getElementById("discountError").innerText = "Discount must be greater than zero!";
                isValid = false;
            } else if (discountType === 'percentage' && discount > 100) {
                document.getElementById("discountError").innerText = "Discount percentage cannot be more than 100%!";
                isValid = false;
            } else if (discountType === 'flat' && discount > 500) {
                document.getElementById("discountError").innerText = "Flat discount cannot exceed ₹500!";
                isValid = false;
            }

            // Validate expiry date
            if (expiry < today) {
                document.getElementById("expiryError").innerText = "Expiry date must be in the future!";
                isValid = false;
            }

            // Validate usage limit
            if (usageLimit <= 0) {
                document.getElementById("usageLimitError").innerText = "Usage limit must be greater than zero!";
                isValid = false;
            }

            // Validate minimum order value
            if (minOrderValue < 0) {
                document.getElementById("minOrderValueError").innerText = "Minimum order value must be greater than or equal to zero!";
                isValid = false;
            }

            if (!isValid) return false; // Stop if validation fails

            // ✅ Send AJAX Request to Check for Duplicate Coupon Code
            try {
                const response = await fetch("/admin/add-coupon", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ 
                        code, 
                        discount, 
                        discountType, 
                        expiry, 
                        usageLimit, 
                        minOrderValue, 
                        categoryIds, 
                        productIds, 
                        userRestriction
                    })
                });

                const result = await response.json();

                if (!result.success) {
                    document.getElementById("codeError").innerText = result.message;
                    return false;
                }

                alert(result.message); // Show success message
                document.getElementById("couponForm").reset(); // Reset the form after success
                return true;

            } catch (error) {
                console.error("Error:", error);
                document.getElementById("codeError").innerText = "Something went wrong! Please try again.";
                return false;
            }
        }

        // Attach validateCoupon function to form submission
        document.getElementById("couponForm").addEventListener("submit", validateCoupon);
    </script>
</body>
</html> -->